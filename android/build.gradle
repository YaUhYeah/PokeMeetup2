// Apply the Android plugin at the top
apply plugin: "com.android.application"

// Android configuration MUST come first so that tasks are registered correctly
android {
  namespace 'io.github.pokemeetup'
  compileSdkVersion 34

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }


  packagingOptions {
    exclude 'META-INF/robovm/ios/robovm.xml'
    exclude 'META-INF/DEPENDENCIES.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/notice.txt'
    exclude 'META-INF/INDEX.LIST'
    exclude 'META-INF/license.txt'
    exclude 'META-INF/dependencies.txt'
    exclude 'META-INF/LGPL2.1'
    exclude 'META-INF/license.txt'
    exclude 'META-INF/dependencies.txt'
    exclude 'META-INF/native-image/org.mongodb/bson/native-image.properties'
    exclude 'META-INF/jetified-objenesis-2.1.jar'
    exclude 'META-INF/AL2.0'
    pickFirst 'META-INF/gdx-box2d.gwt.xml'
    pickFirst 'META-INF/gdx-controllers.gwt.xml'
    pickFirst 'META-INF/gdx-freetype.gwt.xml'
    pickFirst 'META-INF/gdx.gwt.xml'
  }



  defaultConfig {
    applicationId "io.github.pokemeetup"
    minSdkVersion 33
    targetSdkVersion 33
    versionCode 1
    versionName "1.0"
    multiDexEnabled true
    ndk {
      abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
    }
  }

  sourceSets {
    main {
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs = ['src']       // Changed from src/main/java
      aidl.srcDirs = ['src']
      renderscript.srcDirs = ['src']
      res.srcDirs = ['res']
      assets.srcDirs = ['../assets']  // Points to the root assets folder
      jniLibs.srcDirs = ['libs']
    }
  }

  aaptOptions {
    ignoreAssetsPattern "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
    noCompress "json"
  }
}

// Define configurations at the top level (outside any project block)
configurations {
  configureEach {
    exclude group: 'javax.activation', module: 'activation'
    exclude group: 'org.mongodb', module: 'bson-record-codec'
  }
  natives
}

dependencies {
  implementation project(":core")

  implementation 'androidx.core:core-ktx:1.7.0'
  // LibGDX dependencies
  implementation "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
  implementation "com.badlogicgames.gdx:gdx:$gdxVersion"

  // Native libraries
  natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
  natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
  natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
  natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"

  // Android support
  implementation 'androidx.multidex:multidex:2.0.1'
}

// Tasks to copy native libraries
tasks.register('copyAndroidNatives') {
  doFirst {
    file("libs/armeabi-v7a/").mkdirs()
    file("libs/arm64-v8a/").mkdirs()
    file("libs/x86_64/").mkdirs()
    file("libs/x86/").mkdirs()

    configurations.natives.copy().files.each { jar ->
      def outputDir = null
      if (jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("libs/arm64-v8a")
      if (jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
      if (jar.name.endsWith("natives-x86_64.jar")) outputDir = file("libs/x86_64")
      if (jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
      if (outputDir != null) {
        copy {
          from zipTree(jar)
          into outputDir
          include "*.so"
        }
      }
    }
  }
}

tasks.whenTaskAdded { packageTask ->
  if (packageTask.name.contains("package")) {
    packageTask.dependsOn 'copyAndroidNatives'
  }
}
